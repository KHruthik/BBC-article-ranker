{"version":3,"sources":["images/logo.png","images/green_tick.png","components/Header.js","components/Article.js","components/ArticleCard.js","components/ArticleRanker.js","components/Message.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","src","logo","id","Article","isEmpty","obj","Object","keys","length","parseBody","body","map","tag","type","parseParagraph","model","parseHeading","parseImage","parseList","p","text","h","img","className","url","height","width","alt","altText","list","items","item","article","data","this","props","match","params","title","to","Component","ArticleCard","onClick","visit","concat","ArticleRanker","getTitles","getTitleOptionElms","titles","value","createArticleRanker","tableRows","i","push","name","hasDuplicates","array","Set","size","getResponses","selectedOptions","option","document","getElementById","submitResponse","alert","window","location","replace","Message","success","style","display","alignItems","tick","marginLeft","href","App","state","numOfArticlesVisited","visitPage","setState","getTitle","getImage","generateCards","cards","image","goToRankPage","exact","path","render","component","Boolean","hostname","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4b7808ab.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0229c364.png\";","module.exports = __webpack_public_path__ + \"static/media/green_tick.e1f0bf09.png\";","import React from 'react'\r\n\r\nimport logo from '../images/logo.png'\r\n\r\nimport '../css/header.css'\r\n\r\nexport default function Header() {\r\n    return (\r\n        <header>\r\n            <img src={logo} id=\"logo\"/>\r\n        </header>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport '../css/article.css'\r\n\r\nimport data from '../data.json'\r\n\r\nexport class Article extends Component {\r\n\r\n    isEmpty = (obj) => {\r\n        return Object.keys(obj).length === 0;\r\n    }\r\n\r\n    parseBody = (body) => {\r\n        return body.map(tag =>  {\r\n            if (tag.type === 'paragraph') {\r\n                return this.parseParagraph(tag.model)\r\n\r\n            }else if (tag.type === 'heading') {\r\n                return this.parseHeading(tag.model)\r\n\r\n            }else if (tag.type === 'image') {\r\n                return this.parseImage(tag.model)\r\n\r\n            }else if (tag.type === 'list') {\r\n                return this.parseList(tag.model)\r\n\r\n            }else {\r\n                return <h1>Error</h1>\r\n            }\r\n        })\r\n    }\r\n\r\n    parseParagraph = (p) => {\r\n        return <p>{p.text}</p>\r\n    }\r\n\r\n    parseHeading = (h) => {\r\n        return <h2>{h.text}</h2>\r\n    }\r\n\r\n    parseImage = (img) => {\r\n        return <img className=\"image-margin\" src={img.url} height={img.height} width={img.width} alt={img.altText}/>\r\n    }\r\n\r\n    parseList = (list) => {\r\n        if (list.type == 'unordered') {\r\n            return (\r\n                <ul>\r\n                    {list.items.map(item => <li>{item}</li>)}\r\n                </ul>\r\n            )\r\n        }else {\r\n            return (\r\n                <ol>\r\n                    {list.items.map(item => <li>{item}</li>)}\r\n                </ol>\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let article = data[this.props.match.params.id]\r\n        return (\r\n            <div className=\"container-fluid page-width\">\r\n                <h1>{article.title}</h1>\r\n                {this.parseBody(article.body)}\r\n                <Link className=\"btn btn-primary\" to=\"/\">Return</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Article\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport '../css/articleCard.css'\r\n\r\nexport class ArticleCard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card card-width align-text-center card-margin shadow rounded\">\r\n                <img src={this.props.src} className=\"card-width\"/>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.props.title}</h5>\r\n                    <br/>\r\n                    <Link onClick={() => this.props.visit(this.props.id)} className=\"btn btn-primary\" to={\"/article/\".concat(this.props.id)}>Read more</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nArticleCard.propTypes = {\r\n    id: PropTypes.number,\r\n    title: PropTypes.string,\r\n    src: PropTypes.string,\r\n    visit: PropTypes.func\r\n}\r\n\r\nexport default ArticleCard\r\n","import React, { Component } from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport '../css/articleRanker.css'\r\n\r\nimport data from '../data.json'\r\n\r\nexport class ArticleRanker extends Component {\r\n\r\n    getTitles = () => {\r\n        return data.map(article => article.title)\r\n    }\r\n\r\n    getTitleOptionElms = (titles) => {\r\n        return titles.map(title => <option value={title}>{title}</option>)\r\n    }\r\n\r\n    createArticleRanker = () => {\r\n        let tableRows = []\r\n        \r\n        for(let i = 0; i < data.length; ++i) {\r\n            tableRows.push(\r\n                <tr>\r\n                    <td>\r\n                        <div className='number-box'>{i + 1}</div>\r\n                    </td>\r\n                    <td>\r\n                    <select id={\"option\".concat(i)} name = \"dropdown\" className=\"dropdown-size\">\r\n                        {this.getTitleOptionElms(this.getTitles())}\r\n                    </select>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        }\r\n\r\n        return tableRows\r\n    }\r\n\r\n    hasDuplicates = (array) => {\r\n        return (new Set(array)).size !== array.length;\r\n    }\r\n\r\n    getResponses = () => {\r\n        let selectedOptions = []\r\n        for (let i = 0; i < data.length; ++i) {\r\n            let option = document.getElementById(\"option\".concat(i))\r\n            selectedOptions.push(option.value)\r\n        }\r\n        return selectedOptions\r\n    }\r\n\r\n    submitResponse = () => {\r\n        if (!this.hasDuplicates(this.getResponses())) {\r\n            window.location.replace('/message/1')\r\n        }else {\r\n            alert(\"Please choose unique values for each box\")\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"container-fluid page-width\">\r\n                <p>Please rank the article in order of most interesting. (1 meaning most interesting and {data.length} meaning least interesting)</p>\r\n                <table id=\"ranking-structure\">\r\n                    {this.createArticleRanker()}\r\n                </table>\r\n                <button className=\"btn btn-primary\" onClick={this.submitResponse}>Submit</button>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ArticleRanker\r\n","import React from 'react'\r\n\r\nimport tick from '../images/green_tick.png'\r\n\r\nexport default function Message({match}) {\r\n    if (match.params.success == 1) {\r\n        return (\r\n            <main className=\"container-fluid\" style={{width: 1000}}>\r\n                <div style={{display: 'flex', alignItems: 'center'}}>\r\n                    <h1>Thank you</h1>\r\n                    <img src={tick} style={{width: 150, marginLeft: 20}}/>\r\n                </div>\r\n                <br/>\r\n                <p>Your results have been submitted and saved</p>\r\n                <a href=\"https://www.bbc.co.uk/\">BBC homepage</a>\r\n            </main>\r\n        )\r\n    }else {\r\n        return (\r\n            <main className=\"container-fluid\" style={{width: 1000}}>\r\n                <h1>Error</h1>\r\n                <br/>\r\n                <p>An error has occurred and your results have not been submitted</p>\r\n                <p>Please try again</p>\r\n                <a href=\"/rank\">Rank items</a>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\n\nimport Header from './components/Header.js'\nimport Article from './components/Article.js'\nimport ArticleCard from './components/ArticleCard.js'\nimport ArticleRanker from './components/ArticleRanker.js'\nimport Message from './components/Message.js'\n\nimport './css/app.css'\n\nimport data from './data.json'\n\nexport class App extends Component {\n\n  state = {\n    numOfArticlesVisited: 0\n  }\n\n  \n  visitPage = () => {\n    this.setState({numOfArticlesVisited: this.state.numOfArticlesVisited + 1})\n  }\n\n  getTitle = (data) => {\n    return data.title\n  }\n\n  getImage = (data) => {\n    if (data) {\n      for (let i = 0; i < data.length; ++i) {\n        if (data[i].type === \"image\") {\n          return data[i].model.url\n        }\n      }\n    }\n  }\n\n  generateCards = (data) => {\n    let cards = []\n    for(let i = 0; i < data.length; ++i) {\n        let title = this.getTitle(data[i])\n        let image = this.getImage(data[i].body)\n        cards.push(<ArticleCard visit={this.visitPage} id={i} src={image} title={title}/>)\n    }\n    return cards\n  }\n\n  goToRankPage = () => {\n    if (this.state.numOfArticlesVisited >= data.length) {\n      window.location.replace(\"/rank\")\n    }else {\n      alert(\"Please read all the articles before ranking\")\n    }\n  }\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Header />\n          <Route exact path=\"/\" render= {props =>(\n            <div className=\"container-fluid page-width\">\n              <main className=\"flexbox cards-section\">\n                { this.generateCards(data)}\n              </main>\n              <button className=\"btn btn-primary rank-button\" onClick={this.goToRankPage}>Rank articles</button>\n            </div>\n          )} />\n          <Route path=\"/article/:id\" component={Article} />\n          <Route path=\"/rank\" component={ArticleRanker} />\n          <Route path=\"/message/:success\" component={Message} />\n        </div>\n      </Router>\n    )\n  }\n\n\n}\n\nexport default App\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}